{%- comment -%}theme-check-disable LiquidTag{%- endcomment -%}

{%- comment -%}
  Parameters:
  - product {Object} - Product object.
  - media_ratio {Number} - Media aspect ratio.
  - media_crop {String} - If media should crop to fill available spacfe (Options: none, top, center)
  - first_3d_model {Boolean} - First 3d model (if applicable).
  - featured_product {Boolean} - Gallery is for a 'Featured product' section (optional, default is false).
  - zoom {String} - The level of zoom to apply to the image. (Options: off, medium, large, original)

  Usage:
  {% render 'media-gallery',
    product: product,
    media_ratio: section.settings.media_ratio,
    media_crop: 'top',
    thumb_ratio: thumb_ratio,
    thumb_crop: section.settings.thumb_crop,
    first_3d_model: first_3d_model
    zoom: section.settings.hover_zoom
  %}
{%- endcomment -%}

<script src="{{ 'media-gallery.js' | asset_url }}" defer="defer"></script>

{%- liquid
  assign current_variant = product.selected_or_first_available_variant
  assign featured_media = current_variant.featured_media
  assign variant_images = product.images | where: 'attached_to_variant?', true | map: 'src'
  assign media_count = product.media.size

  if section.settings.hide_variants and media_count > 1
    assign media_count = media_count | minus: variant_images.size | plus: 1
  endif

  if featured_product
    assign featured_product = true
    assign layout = 'slider'
  else
    assign featured_product = false
    assign layout = section.settings.media_layout
  endif

  if product.variants and product.variants.size > 1 and section.settings.underline_active
    assign underline_active = true
  else
    assign underline_active = false
  endif
-%}

<media-gallery
    class="media-gallery"
    role="region"
    {% if featured_product %}
      data-is-featured="true"
    {% endif %}
    data-layout="{{ layout }}"
    {% if section.settings.media_layout == "stacked" %}
      data-stacked-scroll="{{ section.settings.stacked_scroll }}"
      data-stacked-underline="{{ underline_active }}"
    {% endif %}
    {% if section.settings.enable_media_grouping %}
      data-media-grouping-enabled
    {% endif %}
    aria-label="{{ 'products.product.media.gallery_viewer' | t }}"
    style="--gallery-bg-color:{{ section.settings.bg_color }};--gallery-border-color:{{ section.settings.border_color }};">
  <div class="media-gallery__status visually-hidden" role="status"></div>

  <div class="media-gallery__viewer relative">
    <ul class="media-viewer flex" id="gallery-viewer" role="list" tabindex="0">
    {%- for media in product.media -%}
        {%- liquid
          assign lazy_load = true
          assign select_first_image = false

          if featured_media == null and forloop.index == 1
            assign lazy_load = false
            assign select_first_image = true
          endif

          if section.settings.media_layout == 'stacked' and forloop.index <= 2
            assign lazy_load = false
          endif

          if forloop.index == 1
            assign lazy_load = false
          endif
        -%}
        <li class="media-viewer__item{% if media.id == featured_media.id or select_first_image %} is-current-variant{% endif %}{% if section.settings.hide_variants and variant_images contains media.src %} media-viewer__item--variant{% endif %}{% if section.settings.media_layout == 'stacked' and media.id == featured_media.id %}{% if underline_active and section.settings.enable_media_grouping == false %} is-active{% endif %}{% endif %}{% if media_count == 1 %} media-viewer__item--single{% endif %}" data-media-id="{{ media.id }}" data-media-type="{{ media.media_type }}">
            {%- liquid
                if featured_product
                  assign widths = '536, 800, 1072, 1280'
                  assign src_width = 1280
                  assign sizes_lg = false
                  assign sizes_xl = '640px'
                  assign sizes_max = false
                elsif section.settings.media_layout == 'stacked'
                  if section.settings.media_size == 'large'
                    assign widths = '430, 640, 860'
                    assign src_width = 860
                    assign sizes_lg = 'calc((50vw - 80px) / 2)'
                    assign sizes_xl = 'calc((100vw - 640px) / 2)'
                    if section.settings.media_ratio == 'natural' or media_crop != 'none' or section.settings.media_ratio == '0.75' or section.settings.media_ratio == '1'
                      assign sizes_max = '500px'
                    else
                      assign sizes_max = '430px'
                    endif
                  else
                    assign widths = '300, 430, 520, 640'
                    assign src_width = 640
                    assign sizes_lg = 'calc((50vw - 80px) / 2)'
                    assign sizes_xl = 'calc((50vw - 128px) / 2)'
                    if section.settings.media_ratio == 'natural' or media_crop != 'none' or section.settings.media_ratio == '0.75' or section.settings.media_ratio == '1'
                      assign sizes_max = '450px'
                    else
                      assign sizes_max = '300px'
                    endif
                  endif
                else
                  if section.settings.media_size == 'large'
                    if section.settings.media_ratio == 'natural' or media_crop != 'none' or section.settings.media_ratio == '0.75' or section.settings.media_ratio == '1'
                      assign sizes_xl = 'calc(100vw - 400px)'
                      assign sizes_lg = 'calc(100vw - 300px)'
                      assign widths = '640, 900, 1100, 1406'
                      assign src_width = 1406
                      assign sizes_max = '930px'
                    else
                      assign sizes_lg = false
                      assign sizes_xl = 'calc(100vw - 624px)'
                      assign widths = '640, 900, 1406, 1726'
                      assign src_width = 1726
                      assign sizes_max = '600px'
                    endif
                  else
                    assign widths = '640, 900, 1214'
                    assign sizes_xl = 'calc(50vw)'
                    assign sizes_lg = 'calc(50vw)'
                    assign src_width = 1214
                    if section.settings.media_ratio == 'natural' or media_crop != 'none' or section.settings.media_ratio == '0.75' or section.settings.media_ratio == '1'
                      assign sizes_max = '800px'
                    else
                      assign sizes_max = '607px'
                    endif
                  endif
                endif
              
                if section.settings.media_ratio != 'natural'
                  if media_crop == 'top'
                    assign img_class = 'product-image img-fit object-top w-full'
                  elsif media_crop == 'center'
                    assign img_class = 'product-image img-fit w-full'
                  else
                    assign img_class = 'product-image img-fit img-fit--contain w-full'
                  endif
                else
                  assign img_class = 'product-image img-fit img-fit--contain w-full'
                endif
              
                if zoom != 'off'
                  case zoom
                    when 'original'
                      assign zoom_level = media.preview_image.width
                      if zoom_level > 5760
                        assign zoom_level = 5760
                      endif
              
                    when 'medium'
                      assign zoom_level = 1000
              
                    when 'large'
                      assign zoom_level = 1500
                  endcase
                endif
              -%}
              
              {%- capture sizes -%}
                {%- render 'sizes-attribute', min: 'page', sm: 'page', md: 'calc(50vw - 64px)', lg: sizes_lg, xl: sizes_xl, max: sizes_max -%}
              {%- endcapture -%}
              
              {%- if media.media_type == 'image' -%}
                <div class="media relative{% if settings.blend_product_images %} image-blend{% endif %}" style="padding-top: {{ 1 | divided_by: media_ratio | times: 100 }}%;">
                  {%- if zoom_level -%}
                    {%- liquid
                      if media_crop != "none"
                        assign height = zoom_level | divided_by: media_ratio
                        assign image_url = media.preview_image | image_url: width: zoom_level, height: height, crop: media_crop
                      else
                        assign image_url = media.preview_image | image_url: width: zoom_level
                      endif
                    -%}
              
                    <a href="{{ image_url }}" rel="nofollow" class="media--cover media--zoom media--zoom-not-loaded inline-flex overflow-hidden absolute top-0 left-0 w-full h-full js-zoom-link" target="_blank">
                  {%- else -%}
                      <div class="media--cover overflow-hidden absolute top-0 left-0 w-full h-full">
                  {%- endif -%}
              
                  {% render 'image',
                  %}
                  {%- liquid
                    assign image = media
                    assign mobile_widths = '690, 800'
                    assign class = img_class
                    assign disable_focal_point = true
                    if srcset_2x
                      assign image_width = src_width
                      assign src_width_2x = src_width | times: 2
                  
                      if image.width >= src_width_2x
                        capture srcset
                          echo image | image_url: width: src_width | append: ', '
                          echo image | image_url: width: src_width_2x | append: ' 2x'
                        endcapture
                  
                        assign src_width = src_width_2x
                        assign image_width = src_width_2x
                      endif
                    else if widths
                      assign input_srcset = widths | remove: ' ' | split: ','
                  
                      for size in input_srcset
                        assign size_int = size | times: 1
                  
                        if forloop.first and image.width < size_int
                          assign output_srcset = image.width
                          break
                        endif
                  
                        if image.width >= size_int
                          unless forloop.first
                            assign output_srcset = output_srcset | append: ','
                          endunless
                  
                          assign output_srcset = output_srcset | append: size
                        else
                          break
                        endif
                      endfor
                  
                      assign output_srcset = output_srcset | split: ','
                  
                      if quality
                        assign quality = quality | times: settings.image_quality
                      else
                        assign quality = settings.image_quality
                      endif
                  
                      for size in output_srcset
                        capture srcset
                          echo srcset
                          unless forloop.first
                            echo ', '
                          endunless
                          assign output_image_width = size | times: quality
                          echo image | image_url: width: output_image_width | append: ' ' | append: size | append: 'w'
                        endcapture
                  
                        if forloop.last
                          assign image_width = output_image_width
                        endif
                      endfor
                  
                      if mobile_widths
                        assign mobile_input_srcset = mobile_widths | remove: ' ' | split: ','
                  
                        for size in mobile_input_srcset
                          assign size_int = size | times: 1
                  
                          if forloop.first and image.width < size_int
                            assign mobile_output_srcset = image.width
                            break
                          endif
                  
                          if image.width >= size_int
                            unless forloop.first
                              assign mobile_output_srcset = mobile_output_srcset | append: ','
                            endunless
                  
                            assign mobile_output_srcset = mobile_output_srcset | append: size
                          else
                            break
                          endif
                        endfor
                  
                        assign mobile_output_srcset = mobile_output_srcset | split: ','
                  
                        for size in mobile_output_srcset
                          capture mobile_srcset
                            echo mobile_srcset
                            unless forloop.first
                              echo ', '
                            endunless
                            echo image | image_url: width: size | append: ' ' | append: size | append: 'w'
                          endcapture
                  
                          if forloop.last
                            assign mobile_image_width = size
                          endif
                        endfor
                      endif
                    endif
                  
                    assign image_height = image_width | divided_by: image.aspect_ratio | round
                    assign js_class = class
                  
                    unless lazy_load == false or section_index == 1
                      assign lazy_load = true
                  
                      if class
                        assign js_class = class | append: ' no-js-hidden'
                      else
                        assign js_class = 'no-js-hidden'
                      endif
                    endunless
                  
                    assign disable_focal_point = disable_focal_point | default: false
                  -%}
                  
                  {%- capture placeholder_image -%}
                    data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20{{ image_width }}%20{{ image_height }}'%3E%3C/svg%3E
                  {%- endcapture -%}
                  
                  {%- if image and src_width -%}
                    {%- if mobile_srcset -%}
                      <picture>
                        <source {% if lazy_load %}data-{% endif %}srcset="{{ mobile_srcset }}"
                                media="(max-width: 600px)"
                                width="{{ mobile_image_width }}"
                                height="{{ mobile_image_width | divided_by: image.aspect_ratio | round }}">
                    {%- endif -%}
                  
                        <img {% if srcset %}{% if lazy_load %}data-{% endif %}srcset="{{ srcset }}" {% endif -%}
                             {% if sizes and srcset %}sizes="{{ sizes }}" {% endif -%}
                             {% if lazy_load %}data-{% endif %}src="{{ image | image_url: width: src_width }}"
                             {% if lazy_load and src_placeholder %}src="{{ placeholder_image }}" {% endif -%}
                             {% if js_class %}class="{{ js_class }}" {% endif -%}
                             {% if attributes %}{{ attributes }} {% endif -%}
                             {% if disable_focal_point == false and image.presentation %}style="object-position: {{ image.presentation.focal_point }}" {% endif -%}
                             loading="{% if lazy_load %}lazy{% else %}eager{% endif %}"
                             width="{{ image_width }}"
                             height="{{ image_height }}"
                             alt="{{ alt_text | default: image.alt | escape }}">
                  
                    {%- if mobile_srcset -%}
                      </picture>
                    {%- endif -%}
                  
                    {%- if lazy_load -%}
                      <noscript>
                        <img src="{{ image | image_url: width: src_width }}"
                             loading="{% if lazy_load %}lazy{% else %}eager{% endif %}"
                             {% if class %}class="{{ class }}" {% endif -%}
                             {% if disable_focal_point == false and image.presentation %}style="object-position: {{ image.presentation.focal_point }}" {% endif -%}
                             width="{{ image_width }}"
                             height="{{ image_height }}"
                             alt="{{ alt_text | default: image.alt | escape }}">
                      </noscript>
                    {%- endif -%}
                  {%- endif -%}
              
                  {%- if zoom_level -%}
                      <img class="zoom-image{% if media_crop == "none" %} zoom-image--contain top-0{% endif %} absolute left-0 right-0 pointer-events-none js-zoom-image no-js-hidden"
                           src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20{{ zoom_level }}%20{{ zoom_level | divided_by: media_ratio }}'%3E%3C/svg%3E" loading="lazy"
                           data-src="{{ image_url }}" width="{{ zoom_level }}" height="{{ zoom_level | divided_by: media_ratio }}"
                           data-original-width="{{ media.preview_image.width }}" data-original-height="{{ media.preview_image.height }}">
                    </a>
                  {%- else -%}
                    </div>
                  {%- endif -%}
                </div>
              {%- else -%}
                {%- if media.media_type == 'model' -%}
                  <product-model class="block relative no-js-hidden" style="padding-top: {{ 1 | divided_by: media_ratio | times: 100 }}%" data-media-id="{{ media.id }}">
                {%- else -%}
                  <deferred-media class="block relative no-js-hidden" style="padding-top: {{ 1 | divided_by: media_ratio | times: 100 }}%" data-media-id="{{ media.id }}">
                {%- endif -%}
              
                <button type="button" class="media-poster absolute top-0 left-0 flex justify-center items-center w-full h-full js-load-media">
                  {%- if media.media_type == 'model' -%}
                    <span class="visually-hidden">{{ 'products.product.media.play_model' | t }}</span>
                    <span class="media-poster__btn absolute flex items-center justify-center pointer-events-none">
                      {%- render 'icon-3d-model' -%}
                    </span>
                  {%- elsif media.media_type == 'video' or media.media_type == 'external_video' -%}
                    <span class="visually-hidden">{{ 'products.product.media.play_video' | t }}</span>
                    <span class="media-poster__btn absolute flex items-center justify-center pointer-events-none">
                      {%- render 'icon-video' -%}
                    </span>
                  {%- endif -%}
              
               
                  {%- liquid
                    assign image = media.preview_image
                    assign mobile_widths = '690, 800'
                    assign class = img_class
                    assign alt_text = media.alt
                    assign disable_focal_point = true
                    if srcset_2x
                      assign image_width = src_width
                      assign src_width_2x = src_width | times: 2
                  
                      if image.width >= src_width_2x
                        capture srcset
                          echo image | image_url: width: src_width | append: ', '
                          echo image | image_url: width: src_width_2x | append: ' 2x'
                        endcapture
                  
                        assign src_width = src_width_2x
                        assign image_width = src_width_2x
                      endif
                    else if widths
                      assign input_srcset = widths | remove: ' ' | split: ','
                  
                      for size in input_srcset
                        assign size_int = size | times: 1
                  
                        if forloop.first and image.width < size_int
                          assign output_srcset = image.width
                          break
                        endif
                  
                        if image.width >= size_int
                          unless forloop.first
                            assign output_srcset = output_srcset | append: ','
                          endunless
                  
                          assign output_srcset = output_srcset | append: size
                        else
                          break
                        endif
                      endfor
                  
                      assign output_srcset = output_srcset | split: ','
                  
                      if quality
                        assign quality = quality | times: settings.image_quality
                      else
                        assign quality = settings.image_quality
                      endif
                  
                      for size in output_srcset
                        capture srcset
                          echo srcset
                          unless forloop.first
                            echo ', '
                          endunless
                          assign output_image_width = size | times: quality
                          echo image | image_url: width: output_image_width | append: ' ' | append: size | append: 'w'
                        endcapture
                  
                        if forloop.last
                          assign image_width = output_image_width
                        endif
                      endfor
                  
                      if mobile_widths
                        assign mobile_input_srcset = mobile_widths | remove: ' ' | split: ','
                  
                        for size in mobile_input_srcset
                          assign size_int = size | times: 1
                  
                          if forloop.first and image.width < size_int
                            assign mobile_output_srcset = image.width
                            break
                          endif
                  
                          if image.width >= size_int
                            unless forloop.first
                              assign mobile_output_srcset = mobile_output_srcset | append: ','
                            endunless
                  
                            assign mobile_output_srcset = mobile_output_srcset | append: size
                          else
                            break
                          endif
                        endfor
                  
                        assign mobile_output_srcset = mobile_output_srcset | split: ','
                  
                        for size in mobile_output_srcset
                          capture mobile_srcset
                            echo mobile_srcset
                            unless forloop.first
                              echo ', '
                            endunless
                            echo image | image_url: width: size | append: ' ' | append: size | append: 'w'
                          endcapture
                  
                          if forloop.last
                            assign mobile_image_width = size
                          endif
                        endfor
                      endif
                    endif
                  
                    assign image_height = image_width | divided_by: image.aspect_ratio | round
                    assign js_class = class
                  
                    unless lazy_load == false or section_index == 1
                      assign lazy_load = true
                  
                      if class
                        assign js_class = class | append: ' no-js-hidden'
                      else
                        assign js_class = 'no-js-hidden'
                      endif
                    endunless
                  
                    assign disable_focal_point = disable_focal_point | default: false
                  -%}
                  
                  {%- capture placeholder_image -%}
                    data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20{{ image_width }}%20{{ image_height }}'%3E%3C/svg%3E
                  {%- endcapture -%}
                  
                  {%- if image and src_width -%}
                    {%- if mobile_srcset -%}
                      <picture>
                        <source {% if lazy_load %}data-{% endif %}srcset="{{ mobile_srcset }}"
                                media="(max-width: 600px)"
                                width="{{ mobile_image_width }}"
                                height="{{ mobile_image_width | divided_by: image.aspect_ratio | round }}">
                    {%- endif -%}
                  
                        <img {% if srcset %}{% if lazy_load %}data-{% endif %}srcset="{{ srcset }}" {% endif -%}
                             {% if sizes and srcset %}sizes="{{ sizes }}" {% endif -%}
                             {% if lazy_load %}data-{% endif %}src="{{ image | image_url: width: src_width }}"
                             {% if lazy_load and src_placeholder %}src="{{ placeholder_image }}" {% endif -%}
                             {% if js_class %}class="{{ js_class }}" {% endif -%}
                             {% if attributes %}{{ attributes }} {% endif -%}
                             {% if disable_focal_point == false and image.presentation %}style="object-position: {{ image.presentation.focal_point }}" {% endif -%}
                             loading="{% if lazy_load %}lazy{% else %}eager{% endif %}"
                             width="{{ image_width }}"
                             height="{{ image_height }}"
                             alt="{{ alt_text | default: image.alt | escape }}">
                  
                    {%- if mobile_srcset -%}
                      </picture>
                    {%- endif -%}
                  
                    {%- if lazy_load -%}
                      <noscript>
                        <img src="{{ image | image_url: width: src_width }}"
                             loading="{% if lazy_load %}lazy{% else %}eager{% endif %}"
                             {% if class %}class="{{ class }}" {% endif -%}
                             {% if disable_focal_point == false and image.presentation %}style="object-position: {{ image.presentation.focal_point }}" {% endif -%}
                             width="{{ image_width }}"
                             height="{{ image_height }}"
                             alt="{{ alt_text | default: image.alt | escape }}">
                      </noscript>
                    {%- endif -%}
                  {%- endif -%}
                </button>
              
                <template>
                  {%- liquid
                    case media.media_type
                      when 'external_video'
                        assign video_class = 'js-' | append: media.host
                        if media.host == 'youtube'
                          echo media | external_video_url: autoplay: true, loop: section.settings.enable_video_looping, playlist: media.external_id | external_video_tag: class: video_class, loading: 'lazy'
                        else
                          echo media | external_video_url: autoplay: true, loop: section.settings.enable_video_looping | external_video_tag: class: video_class, loading: 'lazy'
                        endif
                      when 'video'
                        echo media | media_tag: image_size: "1726x", autoplay: true, loop: section.settings.enable_video_looping, controls: true, preload: 'none'
                      when 'model'
                        echo media | media_tag: image_size: "1726x", toggleable: true
                    endcase
                  -%}
                </template>
              
                {%- if media.media_type == 'model' -%}
                  </product-model>
                  {%- if section.settings.media_layout == 'stacked' and xr_button -%}
                    <button type="button"
                            class="media-xr-button btn btn--primary btn--icon-with-text w-full hidden md:block"
                            data-shopify-model3d-id="{{ media.id }}"
                            data-shopify-title="title"
                            data-shopify-xr
                            data-shopify-xr-hidden>
                      {% render 'icon-3d-model' %}
                      {{ 'products.product.xr_button' | t }}
                    </button>
                  {%- endif -%}
                {%- else -%}
                  </deferred-media>
                {%- endif -%}
              {%- endif -%}
        </li>
      {%- endfor -%}
    </ul>

    {%- if media_count > 1 -%}
      {%- if section.settings.media_arrows != 'never' or section.settings.show_slide_count -%}
        <div class="media-ctrl{% unless section.settings.media_thumbs == 'always' %} media-ctrl--lg-down-static{% endunless %}{% if section.settings.media_layout == 'stacked' %} md:hidden{% endif %} no-js-hidden">
          {% if section.settings.media_arrows != 'never' %}
            <button type="button" class="media-ctrl__btn tap-target vertical-center btn{% if section.settings.media_arrows == 'desktop' %} visible-lg{% elsif section.settings.media_arrows == 'mobile' %} lg:hidden{% endif %}" name="prev" aria-controls="gallery-viewer" disabled>
              <span class="visually-hidden">{{ 'products.product.media.previous' | t }}</span>
              {% render 'icon-chevron-left' %}
            </button>
          {% endif %}
          {% if section.settings.show_slide_count %}
            <div class="media-ctrl__counter text-sm">
              <span class="media-ctrl__current-item">1</span>
              <span aria-hidden="true"> / </span>
              <span class="visually-hidden">{{ 'products.product.media.of' | t }}</span>
              <span class="media-ctrl__total-items">{{ media_count }}</span>
            </div>
          {% endif %}
          {% if section.settings.media_arrows != 'never' %}
            <button type="button" class="media-ctrl__btn tap-target vertical-center btn{% if section.settings.media_arrows == 'desktop' %} visible-lg{% elsif section.settings.media_arrows == 'mobile' %} lg:hidden{% endif %}" name="next" aria-controls="gallery-viewer">
              <span class="visually-hidden">{{ 'products.product.media.next' | t }}</span>
              {% render 'icon-chevron-right' %}
            </button>
          {% endif %}
        </div>
      {%- endif -%}
    {%- endif -%}

    {%- liquid
      assign message_stagger = 1.5
      assign messages = section.blocks | where: "type", "message"
      assign message_is_over_image = false
      for message in messages
        assign stripped_title = message.settings.title | strip_html
        if stripped_title != blank and message.settings.show_over_media
          assign message_is_over_image = true
          break
        endif
      endfor
    -%}

    {%- if message_is_over_image -%}
      {%- assign num_messages = 0 -%}
      <div class="product-messages absolute pointer-events-none">
        {%- for message in messages -%}
          {%- assign stripped_title = message.settings.title | strip_html -%}
          {%- if stripped_title != blank and message.settings.show_over_media -%}
            {%- assign num_messages = num_messages | plus: 1 -%}
            <product-message class="product-message mt-4 mb-4 relative text-xs product-message--out no-js-hidden"
                             style="--bg-color: {{ message.settings.bg_color }};--text-color: {{ message.settings.text_color }};transition-delay: {{ num_messages | times: message_stagger }}s"
                             data-transient="{{ message.settings.visibility_duration }}" {% if message.settings.close == "persistent" %}data-persistent-close="true"{% endif %} data-block-id="{{ message.id }}"
                             role="alert" aria-live="off" {{ message.shopify_attributes }}>
              <div class="product-message__inner">
                {%- if message.settings.icon != 'none' -%}
                  {% render 'icon', icon: message.settings.icon, width: 32, height: 32 %}
                {%- endif -%}

                <div class="rte rte--inherit-heading-color">{{ message.settings.title }}</div>

                {%- if message.settings.close != "none" -%}
                  <button type="button" class="product-message__close tap-target text-current js-close-message">
                    <span class="visually-hidden">{{ 'accessibility.close' | t }}</span>
                    {% render 'icon-close' %}
                  </button>
                {%- endif -%}
              </div>
            </product-message>
          {%- endif -%}
        {%- endfor -%}
      </div>
    {%- endif -%}

    {%- if zoom != 'off' -%}
      <div class="loading-spinner loading-spinner--out" role="status">
        <span class="sr-only">{{ 'accessibility.loading' | t }}</span>
      </div>
    {%- endif -%}
  </div>

  {%- if first_3d_model -%}
    <button type="button"
            class="media-xr-button btn btn--primary btn--icon-with-text w-full mt-2{% if section.settings.media_layout == 'stacked' %} md:hidden{% endif %}"
            data-shopify-model3d-id="{{ first_3d_model.id }}"
            data-shopify-title="{{ product.title | escape }}"
            data-shopify-xr
            data-shopify-xr-hidden>
      {% render 'icon-3d-model' %}
      {{ 'products.product.xr_button' | t }}
    </button>
  {%- endif -%}

  {%- if media_count > 1 and section.settings.media_thumbs != 'never' and featured_product == false -%}
    {%- unless section.settings.media_layout == 'stacked' and section.settings.media_thumbs == 'desktop' -%}
      <div class="media-gallery__thumbs{% if section.settings.media_thumbs == 'desktop' %} hidden md:block{% endif %}{% if section.settings.media_layout == 'stacked' %} md:hidden{% endif %} no-js-hidden">
        <ul class="media-thumbs relative flex" role="list">
          {%- for media in product.media -%}
            {%- liquid
              capture thumb_index
                if media.media_type == 'model'
                  increment model_index
                elsif media.media_type == 'video' or media.media_type == 'external_video'
                  increment video_index
                elsif media.media_type == 'image'
                  increment image_index
                endif
              endcapture

              assign active = false
              if media == current_variant.featured_media or current_variant.featured_media == null and forloop.index == 1
                assign active = true
              endif
            -%}
            <li class="media-thumbs__item{% if section.settings.hide_variants and variant_images contains media.src %} media-thumbs__item--variant{% endif %}" data-media-id="{{ media.id }}">
              <button class="media-thumbs__btn media relative w-full{% if settings.blend_product_images %} image-blend{% endif %}{% if active and section.settings.enable_media_grouping == false %} is-active{% endif %}"{% if active %} aria-current="true"{% endif %} aria-controls="gallery-viewer"{% if section.settings.thumb_ratio != 'natural' %} style="padding-top: {{ 1 | divided_by: thumb_ratio | times: 100 }}%;"{% endif %}>
                <span class="visually-hidden">
                  {%- if media.media_type == 'image' -%}
                    {{- 'products.product.media.load_image' | t: index: image_index -}}
                  {%- elsif media.media_type == 'model' -%}
                    {{- 'products.product.media.load_model' | t: index: model_index -}}
                  {%- elsif media.media_type == 'video' or media.media_type == 'external_video' -%}
                    {{- 'products.product.media.load_video' | t: index: video_index -}}
                  {%- endif -%}
                </span>

                {%- if media.media_type == 'model' -%}
                  <span class="media-thumbs__badge absolute flex items-center justify-center pointer-events-none">
                    {%- render 'icon-3d-model' -%}
                  </span>
                {%- elsif media.media_type == 'video' or media.media_type == 'external_video' -%}
                  <span class="media-thumbs__badge absolute flex items-center justify-center pointer-events-none">
                    {%- render 'icon-video' -%}
                  </span>
                {%- endif -%}

                {%- liquid
                  assign src_width = 80
                  if section.settings.thumb_ratio != 'natural'
                    if thumb_crop == 'top'
                      assign img_class = 'img-fit object-top w-full'
                      assign src_width = 150
                    elsif thumb_crop == 'center'
                      assign img_class = 'img-fit w-full'
                      assign src_width = 150
                    else
                      assign img_class = 'img-fit img-fit--contain w-full'
                    endif
                  endif
                -%}

                {% render 'image',
                  image: media,
                  src_width: src_width,
                  srcset_2x: true,
                  lazy_load: false,
                  class: img_class,
                  disable_focal_point: true
                %}
              </button>
            </li>
          {%- endfor -%}
        </ul>
      </div>
    {%- endunless -%}
  {%- endif -%}

  {%- if section.settings.enable_media_grouping -%}
    {%- liquid
      assign media_grouping_options = section.settings.media_grouping_option | replace: ', ', ',' | split: ','
      for option in product.options
        if media_grouping_options contains option
          assign groupOptionName = option
          assign groupOptionIndex = forloop.index0
          assign groupOptionProperty = 'option' | append: forloop.index
          assign sortedVariants = product.variants | sort: groupOptionProperty
          break
        endif
      endfor
    -%}
    {%- if groupOptionName -%}
      <script class="js-data-variant-media" type="application/json">
        {
          "groupOptionName": {{- groupOptionName | json -}},
          "groupOptionIndex": {{- groupOptionIndex }},
          "variantMedia": [
            {% capture data %}
              {%- for variant in sortedVariants -%}
                {%- if variant.featured_media -%}
                  {
                    "variantId": {{- variant.id -}},
                    "mediaId": {{- variant.featured_media.id -}},
                    "option": {{- variant.options[groupOptionIndex] | json -}}
                  },
                {%- endif -%}
              {%- endfor -%}
            {% endcapture %}
            {{ data | replace_last: ',', '' }}
          ]
        }
      </script>
    {%- endif -%}
  {%- endif -%}
</media-gallery>
