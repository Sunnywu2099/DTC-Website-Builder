<style>
  .scroll-wrapper{
    height: 100vh;
  }
  .scroll-img{
      width: 100%;
      background: #000;
      height: 900vh;
  }
  #scrolling{
      position: fixed;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
      width: 100%;
      max-height: 100vh;
      max-width: 100vw;
  }
  #scrolling img{
      object-fit: contain;
  }
  @media only screen and (max-width: 1000px){

  }
  @media only screen and (max-width: 768px){

  }
</style>

<div class="scroll-imgs">
  <div class="sticky-wrapper">
    <canvas id="scrolling"></canvas>
  </div>
</div>

<script type="module">
    const html = document.documentElement;
    const canvas = document.getElementById("scrolling");
    canvas.width = window.innerWidth;
    canvas.height = window.innerWidth * 810 / 1440;
    const context = canvas.getContext("2d");
    const frameCount = 93;
    const img = new Image();
    let index = 0;

    function picFn(index) {
      const paddedIndex = index.toString().padStart(4, '0');
      return `https://cdn.shopify.com/s/files/1/0644/1870/9653/files/${paddedIndex}.jpg`;
    }

    const render0 = function () {
      img.src = `https://cdn.shopify.com/s/files/1/0644/1870/9653/files/0000.jpg`;
      img.onload = function () {
        context.clearRect(0, 0, canvas.width, canvas.height);
        context.drawImage(img, 0, 0);
      };
    };

    const render = function () {
      img.src = picFn(index);
      img.onload = function () {
        context.clearRect(0, 0, canvas.width, canvas.height);
        context.drawImage(img, 0, 0);
      };
    };

    render0();

    window.addEventListener('scroll', throttle(() => {
      const scrollTop = html.scrollTop;
      const percent = scrollTop / (document.body.scrollHeight - window.innerHeight);
      index = Math.min(199, Math.ceil(percent * 199));
      requestAnimationFrame(render);
    }, 100));

    // 修改 preloadImages 函数
    const preloadImages = () => {
      for (let i = 1; i < frameCount; i++) {
        const img = new Image();
        img.src = picFn(i);
      }
    };

    function throttle(func, delay) {
      let timer = null;
      return function () {
        if (!timer) {
          func.apply(this, arguments);
          timer = setTimeout(() => {
            timer = null;
          }, delay);
        }
      };
    }

    window.onload = function () {
      preloadImages();
    };
</script>

{% schema %}
  {
    "name": "SPX Scroll images",
    "settings": [
      {
        "type": "textarea",
        "id": "text",
        "label": "Text"
      }
    ],
  "presets": [
    {
      "name": "SPX Scroll images"
    }
  ]
    
  }
{% endschema %}