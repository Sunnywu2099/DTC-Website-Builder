<style>
  video{
    display: block;
    width: 100%;
  }
  .btn-box{
        display: flex;
    justify-content: center;
    gap: 50px;
  }
  .btn-box span{
    cursor: pointer;
  }
</style>

<div class="video-control">
  <div class="video-wrapper">
    {{ section.settings.video | video_tag:class:"video-banner", autoplay: false, loop: false, muted: true, controls: false, image_size:'master' }}
  </div>
  <div class="btn-box">
    <span class="prev">prev</span>
    <span class="next">next</span>
  </div>
</div>


<script>
  const bannerVideo = $('.video-banner')[0]; // 获取 DOM 元素
  const prevBtn = $('.btn-box .prev');
  const nextBtn = $('.btn-box .next');
  
  // 正序播放2秒
  const playForward = () => {
      console.log("正序播放");
      bannerVideo.currentTime = 0; // 从头开始
      bannerVideo.play(); // 播放视频
  
      setTimeout(() => {
          bannerVideo.pause(); // 2秒后停止
      }, 2000);
  };
  
  // 倒序播放2秒
  const playReverse = () => {
      console.log("倒序播放");
      let startTime = bannerVideo.currentTime;
      let duration = 2; // 倒序播放时长2秒
      let startTimestamp = null;
  
      // 使用 requestAnimationFrame 进行平滑的倒序播放
      const step = (timestamp) => {
          if (!startTimestamp) startTimestamp = timestamp;
          const elapsed = (timestamp - startTimestamp) / 1000; // 转换为秒
  
          if (elapsed <= duration && bannerVideo.currentTime > 0) {
              bannerVideo.currentTime = startTime - elapsed; // 减少currentTime
              requestAnimationFrame(step); // 继续下一帧
          } else {
              bannerVideo.pause(); // 停止倒序播放
          }
      };
  
      requestAnimationFrame(step); // 启动倒序播放
  };
  
  // 按钮事件绑定
  nextBtn.click(playForward);
  prevBtn.click(playReverse);
</script>

{% schema %}
  {
    "name": "SPX Video conntrol",
    "settings": [
      {
        "type": "video",
        "id": "video",
        "label": "A Shopify-hosted video"
      }
    ],
  "presets": [
    {
      "name": "SPX Video conntrol"
    }
  ]
    
  }
{% endschema %}